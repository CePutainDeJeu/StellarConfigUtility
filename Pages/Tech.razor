@page "/tech"
@using StellarConfigUtility.Models
@using StellarConfigUtility.Interfaces;
@inject IDataAccessService _service;
@inject IJSRuntime JsRuntime;

<h3>Add New Stellar Tech</h3>

<EditForm Model="@tech" OnValidSubmit="@HandleValidSubmit">
	<DataAnnotationsValidator />
	<ValidationSummary />

	<label>
		Technology Name:
		<InputText id="TechName" @bind-Value="tech.Name" />
	</label>

	<label>
		Tech Cost:
		<InputNumber id="TechCost" @bind-Value="tech.Cost" />
	</label>

	<label>
		Tech Tier:
		<InputNumber id="TechTier" @bind-Value="tech.Tier" />
	</label>

	<label>
		Tech Cost Weight:
		<InputNumber id="TechWeight" @bind-Value="tech.Weight" />
	</label>

	<label>
		Tech Category:
		<InputText id="TechCategory" @bind-Value="tech.Category" />
	</label>

	<label>
		Tech Tree:
		<InputText id="TechTree" @bind-Value="tech.Tree" />
	</label>

	<label>
		Prerequisites:
		<InputText id="TechPrereqs" @bind-Value="tech.Prerequisites" />
	</label>

	<button type="submit">Submit Tech</button>
</EditForm>

<br />
<br />

<table class="table">
	<thead>
		<tr>
			<th>
				Name
			</th>
			<th>
				Cost
			</th>
			<th>
				Tree
			</th>
			<th>
				Tier
			</th>
			<th>
				Category
			</th>
			<th>
				Weight
			</th>
			<th>
				Prerequisites
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in _service.GetTechnologies())
		{
			<tr>
				<td>
					@item.Name
				</td>
				<td>
					@item.Cost
				</td>
				<td>
					@item.Tree
				</td>
				<td>
					@item.Tier
				</td>
				<td>
					@item.Category
				</td>
				<td>
					@item.Weight
				</td>
				<td>
					@item.Prerequisites
				</td>
				<td>
					<button>
						Edit
					</button>
					<button @onclick="@(() => DeleteTech(@item) )">
						Delete
					</button>
				</td>
			</tr>
		}
	</tbody>
</table>

@code {
	@inject NavigationManager NavigationManager;
	private Technology tech = new Technology();

	private void HandleValidSubmit()
	{
		_service.CreateTechnology(tech);
		NavigationManager.NavigateTo("tech", true);
	}

	private async void DeleteTech(Technology tech)
	{
		bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", $"Are you sure you want to delete '{tech.Name}'?");
		if (confirmed)
		{
			_service.DeleteTechnology(tech.TechnologyId);
			NavigationManager.NavigateTo("tech", true);
		}
	}
}